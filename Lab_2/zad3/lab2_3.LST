C51 COMPILER V9.51   LAB2_3                                                                05/15/2022 14:16:09 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE LAB2_3
OBJECT MODULE PLACED IN lab2_3.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lab2_3.c OMF2 BROWSE DEBUG TABS(2)

line level    source

   1          #include <REGX52.H>
   2          #define Dioda P0_0
   3          #define numer 1
   4          
   5          unsigned char code Tab[] = {0xEF,0xDF, 0xBF, 0x7F};
   6          unsigned char Haslo[] = {0xBD, 0x7B, 0xEB, 0xDD}; // Haslo - 9026
   7          unsigned char wejscie[] = {0xFF, 0xFF, 0xFF, 0xFF};
   8          bit opoznienie = 0;
   9          unsigned char bdata Key;
  10          sbit Key_3 = Key^3;
  11          sbit Key_2 = Key^2;
  12          sbit Key_1 = Key^1;
  13          void delay(bit wolniej);
  14          bit blad = 0;
  15          
  16          void main(void)
  17          {
  18   1        unsigned char data i = 0;
  19   1        unsigned char data j = 0;
  20   1        bit Zezwalaj = 1;     // flaga, zabezpieczajaca przed wielokrotnym wejsciem do procedury wykonawczej przy p
             -rzytrzymaniu klawisza
  21   1        while(1)
  22   1        {
  23   2          P2 = Tab[i];
  24   2          Key = P2; 
  25   2          if ((Key_3&Key_2&Key_1)==0)
  26   2          { 
  27   3            if (Zezwalaj == 1)
  28   3            {
  29   4              Zezwalaj = 0;
  30   4              if(j <= 3)
  31   4              {
  32   5                wejscie[j] = P2;
  33   5                j++;
  34   5              }
  35   4              else
  36   4              {
  37   5                if(Key == 0x7D)
  38   5                {
  39   6                  for(j = 0; j<=3 ; j++)
  40   6                  {
  41   7                    if(wejscie[j] == Haslo[j])
  42   7                    {
  43   8                      ;
  44   8                    }
  45   7                    else
  46   7                    {
  47   8                      blad = 1;
  48   8                      break;
  49   8                    }
  50   7                  }
  51   6                  if(blad == 0)
  52   6                  {
  53   7                    for(j = 0 ; j<6 ; j++)
  54   7                    {
C51 COMPILER V9.51   LAB2_3                                                                05/15/2022 14:16:09 PAGE 2   

  55   8                    Dioda = 0;
  56   8                    delay(opoznienie);
  57   8                    Dioda = 1;
  58   8                    delay(opoznienie);                
  59   8                    }
  60   7                  }
  61   6            
  62   6                  for(j = 0; j<=3; j++)
  63   6                  {
  64   7                    wejscie[j] = 0xFF;
  65   7                  }
  66   6                  j = 0;
  67   6                  blad = 0;
  68   6                }
  69   5                else if(Key == 0x77)
  70   5                {
  71   6                  for(j = 0; j<=3 ; j++)
  72   6                  {
  73   7                    if(wejscie[j] == Haslo[j])
  74   7                    {
  75   8                      ;
  76   8                    }
  77   7                    else
  78   7                    {
  79   8                      blad = 1;
  80   8                      break;
  81   8                    }
  82   7                  }
  83   6                  if(blad == 0)
  84   6                  {
  85   7                    for(j = 0; j<=2; j++)
  86   7                    {
  87   8                      Dioda = 0;
  88   8                      delay(opoznienie);
  89   8                      Dioda = 1;
  90   8                      delay(opoznienie);
  91   8                    }
  92   7                    opoznienie = 1;
  93   7                    delay(opoznienie);
  94   7                    opoznienie = 0;
  95   7                    for(j = 0; j<=2; j++)
  96   7                    {
  97   8                      Dioda = 0;
  98   8                      delay(opoznienie);
  99   8                      Dioda = 1;
 100   8                      delay(opoznienie);
 101   8                    }
 102   7                  
 103   7                    for(j = 0; j<=3; j++)
 104   7                    {
 105   8                      wejscie[j] = 0xFF;
 106   8                    }
 107   7                  }
 108   6                  j = 0;
 109   6                  blad = 0;
 110   6                }
 111   5                else
 112   5                {
 113   6                  for(j = 0; j<=3; j++)
 114   6                  {
 115   7                    wejscie[j] = 0xFF;
 116   7                  } 
C51 COMPILER V9.51   LAB2_3                                                                05/15/2022 14:16:09 PAGE 3   

 117   6                j = 0;
 118   6                blad = 0;
 119   6                }
 120   5              }
 121   4            }
 122   3          }
 123   2          else
 124   2          {
 125   3            if (i<3) 
 126   3            {
 127   4              i++;
 128   4            }
 129   3            else 
 130   3            {
 131   4              i = 0;
 132   4            }
 133   3            Zezwalaj = 1;     // odblokowanie zezwalania na wejscie do procedur obslugi klawiszy 
 134   3          }
 135   2        }
 136   1      }  
 137          
 138          void delay(bit wolniej)
 139          {
 140   1        unsigned char data i;
 141   1        unsigned char data j;
 142   1        
 143   1        if(wolniej == 0)
 144   1        {
 145   2         for(i=0 ; i<200 ; i++)
 146   2         {
 147   3            for(j=0;j<94;j++)
 148   3            {;}
 149   3         }
 150   2        }
 151   1        else
 152   1        {
 153   2         for(i=0 ; i<200 ; i++)
 154   2         {
 155   3            for(j=0;j<189;j++)
 156   3            {;}
 157   3         }  
 158   2        }
 159   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    312    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       2
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
